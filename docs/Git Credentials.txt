1. https://docs.github.com/en/get-started/getting-started-with-git/caching-your-github-credentials-in-git
2. https://github.com/GitCredentialManager/git-credential-manager
3. https://github.com/GitCredentialManager/git-credential-manager/blob/main/docs/credstores.md

Linux: Informação do 2 link

    Linux
    Ubuntu/Debian distributions
    Download the latest .deb package, and run the following:

    sudo dpkg -i <path-to-package>
    git-credential-manager-core configure
    Note: Although packages were previously offered on certain Microsoft Ubuntu package feeds, GCM no longer publishes to these repositories. Please install the Debian package using the above instructions instead.

    To uninstall:

    git-credential-manager-core unconfigure
    sudo dpkg -r gcm
    Other distributions
    Option 1: Tarball
    Download the latest tarball, and run the following:

    tar -xvf <path-to-tarball> -C /usr/local/bin
    git-credential-manager-core configure
    To uninstall:

    git-credential-manager-core unconfigure
    rm $(command -v git-credential-manager-core)
    Option 2: Install from source helper script
    Ensure curl is installed:

    curl --version
    If curl is not installed, please use your distribution's package manager to install it.

    Download and run the script:

    curl -LO https://raw.githubusercontent.com/GitCredentialManager/git-credential-manager/main/src/linux/Packaging.Linux/install-from-source.sh &&
    sh ./install-from-source.sh &&
    git-credential-manager-core configure
    Note: You will be prompted to enter your credentials so that the script can download GCM's dependencies using your distribution's package manager.

    To uninstall:

    Follow these instructions for your distribution.

    Note: ALL LINUX DISTRIBUTIONS REQUIRE ADDITIONAL CONFIGURATION TO USE GCM. !!!
           -----------------------------------------------------------------------

    INFORMAÇÃO DO 3O LINK

    Credential stores
    There are several options for storing credentials that GCM supports:

    Windows Credential Manager
    DPAPI protected files
    macOS Keychain
    freedesktop.org Secret Service API
    GPG/pass compatible files
    Git's built-in credential cache
    Plaintext files
    The default credential stores on macOS and Windows are the macOS Keychain and the Windows Credential Manager, respectively.

    GCM comes without a default store on Linux distributions.

    You can select which credential store to use by setting the GCM_CREDENTIAL_STORE environment variable, or the credential.credentialStore Git configuration setting. For example:

    git config --global credential.credentialStore gpg
    Some credential stores have limitations, or further configuration required depending on your particular setup. See more detailed information below for each credential store.

    EXEMPLO de CREDENTIAL STORE DISPONÍVEL EM LINUXs COM GUI

    Available on: Linux

    ⚠️ Requires a graphical user interface session.

    export GCM_CREDENTIAL_STORE=secretservice
    # or
    git config --global credential.credentialStore secretservice
    This credential store uses the libsecret library to interact with the Secret Service. It stores credentials securely in 'collections', which can be viewed by tools such as secret-tool and seahorse.

    A graphical user interface is required in order to show a secure prompt to request a secret collection be unlocked.